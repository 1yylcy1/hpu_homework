#include<iostream>
using namespace std;
typedef struct BiTNode
{
	int weight;
	struct BiTNode *left,*right;
}BiTNode,*BiTree;
void CreateBiTree(BiTree &T)
{//先序建立二叉树
    int a;
    scanf("%d",&a);
    if(a==0) T=NULL;
    else
    {
        T=(BiTree)malloc(sizeof(BiTNode));
        T->weight=a;
        CreateBiTree(T->left);
        CreateBiTree(T->right);
    }
}
int WPL(BiTree &T,int d)
{//求二叉树T的带权路径长度
    int wpl=0;
    if(T->right==NULL&&T->left==NULL) 
    wpl+=d*T->weight;
    if(T->left!=NULL)
    {
        wpl+=WPL(T->left,d+1);
    }
    if(T->right!=NULL)
    {
        wpl+=WPL(T->right,d+1);
    }
    return wpl;

}

