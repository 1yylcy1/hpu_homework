 #include<iostream>
#include<string.h>
using namespace std;
typedef struct BiTNode
{
	char data;
	struct BiTNode *lchild,*rchild;
}BiTNode,*BiTree;
void CreateBiTree(BiTree &T,char S[],int &i)
{//先序建立二叉树
	if(S[i]=='0'){
        T=NULL;
    }else{
        T=new BiTNode;
        T->data = S[i];
        CreateBiTree(T->lchild,S,++i);
        CreateBiTree(T->rchild,S,++i);
    }
}
void PreOrderTraverse(BiTree T)
{//二叉树的先序遍历
     if(T==NULL) return ;
    else{
        cout<<T->data;
        PreOrderTraverse(T->lchild);
        PreOrderTraverse(T->rchild);
    }
}
void InOrderTraverse(BiTree T)
{//二叉树的中序遍历
	if(T==NULL) return ;
    else{
        InOrderTraverse(T->lchild);
        cout<<T->data;
        InOrderTraverse(T->rchild);
    }
}
void PostOrderTraverse(BiTree T)
{//二叉树的后序遍历
	if(T==NULL) return ;
    else{
        PostOrderTraverse(T->lchild);
        PostOrderTraverse(T->rchild);
        cout<<T->data;
    }
}
