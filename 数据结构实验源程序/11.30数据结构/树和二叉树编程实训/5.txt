 #include <iostream>
#include <string.h>
using namespace std;

typedef struct BiTNode
{
    char data;
    struct BiTNode *lchild,*rchild;
}BiTNode,*BiTree;

BiTree CreateBiTree(int &pos, char *str)
{// 先序建立二叉树
    BiTree T;
   if(str[pos]=='0'){
       pos++;
       T=NULL;
   }else{
       T=new BiTNode;
       T->data = str[pos++];
       T->lchild=CreateBiTree(pos,str);
       T->rchild=CreateBiTree(pos,str);
   }
   return T;
}

int Width(BiTree T)
{// 求二叉树T最大宽度
     if(T==NULL){
   	return 0;
   }
   BiTree Q[100];
   int front=1, rear=1, last=1, width=0, widthmax=0;
   Q[rear]=T;
   while(front<=last){
   	width++;
   	BiTree P=Q[front++];
   	if(P->lchild){
   		Q[++rear]=P->lchild;
	   }
	if(P->rchild){
		Q[++rear]=P->rchild;
	}
	if(front>last){
		last=rear;
		widthmax=widthmax>width?widthmax:width;
		width=0;
	}
   }
   return widthmax;
}


